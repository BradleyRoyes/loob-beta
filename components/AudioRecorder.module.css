/* AudioRecorder.module.css */
.audioButton {
  padding: 10px 20px;
  font-size: 16px;
  background-color: #a2577f;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.audioButton:hover {
  background-color: #985d6f;
}

.audioButton:active {
  background-color: #674265;
}

.container {
  position: relative;
  width: 60px;
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  transition: all 0.3s ease;
}

.recordingContainer {
  position: absolute;
  left: 0;
  right: 96px;
  min-height: 48px;
  background: rgba(20, 20, 20, 0.4);
  border: 1px solid rgba(248, 180, 180, 0.2);
  backdrop-filter: blur(10px);
  border-radius: 24px;
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 0 12px;
  opacity: 0;
  transform: translateX(20px);
  pointer-events: none;
  transition: all 0.3s ease;
  width: calc(100% - 96px);
}

.container.recording {
  width: 100%;
}

.container.recording .recordingContainer {
  opacity: 1;
  transform: translateX(0);
  pointer-events: all;
}

.waveformContainer {
  flex: 1;
  height: 32px;
  position: relative;
  overflow: hidden;
  margin: 0;
  display: flex;
  align-items: center;
  width: 100%;
  background: rgba(20, 20, 20, 0.2);
  border-radius: 16px;
  padding: 0 4px;
}

.waveform {
  position: relative;
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 2px;
}

.waveformBar {
  width: 4px;
  margin: 0 2px;
  background: linear-gradient(to bottom, rgb(248, 180, 180) 0%, rgb(243, 164, 164) 100%);
  border-radius: 2px;
  transition: height 0.15s ease-in-out;
  position: relative;
  overflow: hidden;
}

.waveformBar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(to bottom, 
    rgba(255, 255, 255, 0.2) 0%,
    rgba(255, 255, 255, 0.1) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  animation: shimmer 2s infinite;
  transform: translateY(100%);
}

@keyframes shimmer {
  0% {
    transform: translateY(100%);
    opacity: 0.7;
  }
  50% {
    transform: translateY(0);
    opacity: 0.3;
  }
  100% {
    transform: translateY(-100%);
    opacity: 0.7;
  }
}

.recording .waveformBar {
  background: linear-gradient(to bottom, 
    rgb(248, 180, 180) 0%, 
    rgb(243, 164, 164) 50%,
    rgb(238, 148, 148) 100%
  );
  box-shadow: 0 0 8px rgba(248, 180, 180, 0.3);
}

.waveform {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 60px;
  padding: 0 1rem;
  gap: 2px;
}

.microphoneIcon {
  width: 48px;
  height: 48px;
  background: radial-gradient(circle at center, rgba(255, 182, 193, 0.9), rgba(255, 218, 185, 0.6));
  border-radius: 50%;
  position: relative;
  box-shadow: 0 0 10px rgba(255, 145, 135, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}

.microphoneIcon svg {
  width: 24px;
  height: 24px;
  color: white;
}

.buttonsContainer {
  display: flex;
  align-items: center;
  gap: 8px;
  position: absolute;
  right: 4px;
  top: 50%;
  transform: translateY(-50%);
}

.cancelButton {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: none;
  background: linear-gradient(135deg, rgb(255, 170, 170) 0%, rgb(255, 140, 140) 100%);
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  opacity: 0;
  transform: scale(0.8);
  pointer-events: none;
  box-shadow: 0 0 20px rgba(255, 140, 140, 0.4);
  position: relative;
  z-index: 1;
}

.cancelButton::after {
  content: '';
  position: absolute;
  inset: -2px;
  background: radial-gradient(circle at center, rgba(255, 140, 140, 0.3), transparent 70%);
  border-radius: 50%;
  z-index: -1;
  opacity: 0.8;
}

.container.recording .cancelButton {
  opacity: 1;
  transform: scale(1);
  pointer-events: all;
}

.confirmButton {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: none;
  background: linear-gradient(135deg, rgb(248, 180, 180) 0%, rgb(243, 164, 164) 100%);
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 0 20px rgba(248, 180, 180, 0.4);
  position: relative;
  z-index: 1;
}

.confirmButton::after {
  content: '';
  position: absolute;
  inset: -2px;
  background: radial-gradient(circle at center, rgba(248, 180, 180, 0.3), transparent 70%);
  border-radius: 50%;
  z-index: -1;
  opacity: 0.8;
}

.confirmButton:hover {
  transform: scale(1.05);
  box-shadow: 0 0 25px rgba(248, 180, 180, 0.5);
}

.confirmButton svg,
.cancelButton svg {
  width: 20px;
  height: 20px;
}

.duration {
  font-size: 14px;
  color: rgba(255, 255, 255, 0.9);
  margin-right: 12px;
  font-family: monospace;
  min-width: 44px;
  text-align: center;
}

.errorMessage {
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(220, 38, 38, 0.9);
  color: white;
  padding: 4px 12px;
  border-radius: 12px;
  font-size: 0.75rem;
  max-width: 90vw;
  text-align: center;
  margin-bottom: 8px;
  animation: fadeInOut 3s ease-in-out;
  opacity: 0;
  backdrop-filter: blur(4px);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.browserSupport {
  text-align: center;
  color: #666;
  font-size: 0.875rem;
  margin-top: 0.5rem;
}

.permissionHint {
  display: none;
}

.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Mobile adjustments */
@media (max-width: 768px) {
  .container,
  .recorderButton,
  .microphoneIcon {
    width: 48px;
    height: 48px;
  }

  .microphoneIcon svg {
    width: 20px;
    height: 20px;
  }

  .recordingContainer {
    right: 88px;
    min-height: 40px;
    padding: 0 8px;
    gap: 6px;
  }

  .waveform {
    gap: 1px;
  }

  .waveformBar {
    min-width: 1px;
    max-width: 2px;
  }

  .duration {
    font-size: 12px;
    min-width: 36px;
    margin-right: 8px;
  }
}

/* Small mobile adjustments */
@media (max-width: 380px) {
  .recordingContainer {
    right: 84px;
    min-height: 36px;
    padding: 0 6px;
    gap: 4px;
  }

  .waveform {
    gap: 1px;
  }

  .waveformBar {
    min-width: 1px;
    max-width: 2px;
  }

  .duration {
    min-width: 32px;
    margin-right: 6px;
  }
}

.rippleContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 400%;
  height: 400%;
  pointer-events: none;
  z-index: 1;
}

.ripple {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  background: radial-gradient(circle, rgba(255, 180, 120, 0.5), transparent);
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(1);
  animation: rippleEffect 2.5s ease-out infinite;
}

.glowRipple {
  position: absolute;
  top: 50%;
  left: 50%;
  background: radial-gradient(circle, rgba(255, 145, 135, 0.4), transparent);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  animation: glowEffect 1.5s ease-out infinite;
  pointer-events: none;
  z-index: 1;
}

@keyframes rippleEffect {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(10);
  }
}

@keyframes glowEffect {
  0%, 100% {
    transform: translate(-50%, -50%) scale(1);
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
  }
}

.cancelButton:hover {
  transform: scale(1.05);
  box-shadow: 0 0 25px rgba(255, 140, 140, 0.5);
}

.statusContainer {
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  width: auto;
  min-width: 200px;
  text-align: center;
  margin-bottom: 8px;
  pointer-events: none;
  z-index: 1;
}

.statusMessage {
  font-size: 0.75rem;
  color: rgba(255, 255, 255, 0.8);
  background: rgba(0, 0, 0, 0.5);
  padding: 4px 12px;
  border-radius: 12px;
  backdrop-filter: blur(4px);
  max-width: 90%;
  word-wrap: break-word;
  animation: fadeInOut 3s ease-in-out;
  opacity: 0;
  margin: 0 auto;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.formatInfo {
  display: none;
}

@keyframes fadeInOut {
  0% {
    opacity: 0;
    transform: translate(-50%, 10px);
  }
  10% {
    opacity: 1;
    transform: translate(-50%, 0);
  }
  90% {
    opacity: 1;
    transform: translate(-50%, 0);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -10px);
  }
}


